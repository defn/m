#ManagedBy: cue

patches: []
namespace: global-vc0
resources:
  - resource-namespace-vcluster.yaml
helmCharts:
  - releaseName: vcluster
    namespace: global-vc0
    valuesInline:
      vcluster:
        image: rancher/k3s:v1.24.13-k3s1
      syncer:
        extraArgs:
          - --tls-san=vcluster.global-vc0.svc.cluster.local
          - --enforce-toleration=env=global-vc0:NoSchedule
      sync:
        nodes:
          enabled: true
          nodeSelector: env=global
        generic:
          clusterRole:
            extraRules:
              - apiGroups:
                  - apiextensions.k8s.io
                resources:
                  - customresourcedefinitions
                verbs:
                  - get
                  - list
                  - watch
          role:
            extraRules:
              - apiGroups:
                  - serving.knative.dev
                resources:
                  - services
                  - configurations
                  - revisions
                  - routes
                verbs:
                  - create
                  - delete
                  - patch
                  - update
                  - get
                  - list
                  - watch
          config: |-
            version: v1beta1
            export:
              - apiVersion: serving.knative.dev/v1
            	kind: Service
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
              - apiVersion: serving.knative.dev/v1
            	kind: Configuration
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
              - apiVersion: serving.knative.dev/v1
            	kind: Revision
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
              - apiVersion: serving.knative.dev/v1
            	kind: Route
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
            import:
              - apiVersion: serving.knative.dev/v1
            	kind: Service
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
              - apiVersion: serving.knative.dev/v1
            	kind: Configuration
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
              - apiVersion: serving.knative.dev/v1
            	kind: Revision
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
              - apiVersion: serving.knative.dev/v1
            	kind: Route
            	patches:
            	  - op: copyFromObject
            		fromPath: .metadata.annotations['argocd.argoproj.io/tracking-id']
            		path: .metadata.annnotations['argocd.argoproj.io/tracking-id']
      tolerations:
        - key: env
          value: global
          operator: Equal
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: env
                    operator: In
                    values:
                      - global
      fallbackHostDns: true
      multiNamespaceMode:
        enabled: true
      service:
        type: LoadBalancer
        loadBalancerClass: tailscale
    name: vcluster
    version: 0.15.0
    repo: https://charts.loft.sh
    includeCRDs: true
